#!/usr/bin/env python
import argparse
from pathlib import Path
import sys

VERSION = "0.1"

def main():
    global options
    options = get_options()
    process_path(options.startdir)


def process_path(start_location):
    for file in Path(start_location).rglob("*"):
        if not file.is_symlink():
            continue

        target = file.readlink()

        if options.dryrun:
            print(f"Found {str(file)} which pointed to {target}")

        else:
            # We must delete the original symlink first otherwise the
            # open statement will follow it.
            file.unlink()

            with open(file,"wt", encoding="utf8") as out:
                print("#symlink2text", file=out)
                print("#https://github.com/s-andrews/symlink2text", file=out)
                print(f"TARGET\t{target}", file=out)

            if not options.quiet:
                print(f"Replaced {file}", file=sys.stderr)


def get_options():
    parser = argparse.ArgumentParser(description="Convert symlinks to a text file saying where the symlink pointed")

    parser.add_argument("--quiet", action="store_true", default=False, help="Suppress all progress messages")
    parser.add_argument("--dryrun",action="store_true", default=False, help="Report on actions but don't do anything")
    parser.add_argument("--version", action="version", version=f"symlink2text v{VERSION} https://github.com/s-andrews/symlink2text")
    parser.add_argument("startdir", type=str, help="The location to search for symlinks")

    options = parser.parse_args()

    return options

if __name__ == "__main__":
    main()

